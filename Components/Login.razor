@page "/login"
@layout LoginLayout 
@using HotelTools.Autenticacion;
@using HotelTools.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@inject ServicioCuentaUsuario servicioCuentaUsuario;
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nav;
@using System.ComponentModel.DataAnnotations

        <div class="d-flex justify-center">
            <div class="img-logo">
                <img src="img/logo.png" width="40%" /> 
            </div>
        </div>
<MudCard class ="formulario-login">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5" Align="Align.Center">Iniciar Sesi칩n</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField T="string" 
                     Label="Usuario" 
                     @bind-Value="model.NombreUsuario"
                     Variant="Variant.Outlined"
                     Class="mt-3"
                     />        
        <MudTextField T="string"
                     Label="Contrase침a"
                     @bind-Value="model.Password"
                     Variant="Variant.Outlined"
                     InputType="InputType.Password"
                     Class="mt-3"/>
    </MudCardContent>
    <MudCardActions Class="d-flex justify-center pa-2 ">
        <MudButton OnClick="Autenticar"
                  Class="mb-4"
                  Variant="Variant.Filled"
                  Color="Color.Info"
                  Size="Size.Large"
                  FullWidth="true">
            Iniciar Sesi칩n
        </MudButton>
    </MudCardActions>
</MudCard>


@code {
    CuentaUsuario model = new();

    private async Task Autenticar()
    {
        var cuentaUsuario = servicioCuentaUsuario.GetByUsername(model.NombreUsuario);
        
        if (cuentaUsuario == null || cuentaUsuario.Password != model.Password)
        {
            await js.InvokeVoidAsync("alert", "El usuario o contrase침a son incorrectos.");
            return;
        }
        
        var sessionUsuario = new SessionUsuario
        {
            NombreUsuario = cuentaUsuario.NombreUsuario,
            Role = cuentaUsuario.Role
        };

        await ((EstadoAuthProveedor)authStateProvider).UpdateAuthenticationState(sessionUsuario);
        nav.NavigateTo("/", true);
    }
}
