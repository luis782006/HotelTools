@inherits LayoutComponentBase
@inject NavigationManager nav
@inject AuthenticationStateProvider authentication;
@using System.Security.Claims;
@using HotelTools.Components.Pages
@inject IJSRuntime js;

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" >
       
              
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudText Typo="Typo.h5" Class="ml-3">Hotel Tools</MudText>       

               
                <div >
                <AuthorizeView>
                    <Authorized>
                        <div>
                            <MudIconButton Color="Color.Default" Icon="@Icons.Material.Filled.Logout" @onclick="Logout">Logout</MudIconButton>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div>
                            <MudIconButton Color="Color.Default" Icon="@Icons.Material.Filled.Login" @onclick="LogIn">Login</MudIconButton>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
                </div>
      
        
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
            
                @Body
           
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    MudTheme _theme = new MudTheme();

    bool hasSession=false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private MudTheme CreateTheme()
    {
        return new MudTheme
            {

                PaletteDark = new PaletteDark
                {
                    //Primary = Colors.Blue.Lighten5,
                    //Secondary = Colors.Blue.Lighten,
                    AppbarBackground = Colors.Blue.Lighten1
                }
            };

    }

    protected override async Task OnInitializedAsync()
    {
        _theme = CreateTheme();
    }
    private async void Logout()
    {
        var authStateProvider = (EstadoAuthProveedor)authentication;
        await authStateProvider.UpdateAuthenticationState(null);
        nav.NavigateTo("/", true);
    }

    private void LogIn()
    {
        nav.NavigateTo("/login", true);
    }

    

}