@page "/dashboard"

@inject IJSRuntime js
@inject NavigationManager nav
@using Microsoft.AspNetCore.Components.Authorization


<AuthorizeView>
    <Authorized>
        <h1>Hello, world!</h1>
    </Authorized>
    <NotAuthorized>
        <p>Hola usuario</p>
    </NotAuthorized>
</AuthorizeView>
    


Welcome to your new app.

<AuthorizeView Roles="Admin,User">
    <Authorized>
        <br/>
        <br/>
        <button class="btn btn-primary" @onclick="MostrarSaludos">Saber el Role</button>
        <br />
        <br />
        <button class="btn btn-primary" @onclick="MostrarCounter">Counter</button>
    </Authorized>
   
</AuthorizeView>

@code{
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationTask { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationTask;
        if (authState?.User?.Identity?.IsAuthenticated == true)
        {
            string message = $"Hola {authState.User.Identity.Name}";
            Console.WriteLine(message); // Depuración
        }
        else
        {
            Console.WriteLine("User is not authenticated in OnInitializedAsync."); // Depuración
        }
    }

  
    private async Task MostrarSaludos()
    {
        var authState = await AuthenticationTask;
        string message = $"Hola {authState.User.Identity.Name}";              
        await js.InvokeVoidAsync("alert", message);   
    }

    private async Task MostrarCounter()
    {
       nav.NavigateTo("/counter");
    }
}
